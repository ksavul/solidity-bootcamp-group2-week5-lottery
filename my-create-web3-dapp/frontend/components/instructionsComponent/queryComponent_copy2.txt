import { useEffect, useState } from "react";
import { useContractRead } from "wagmi";
import config from "../../../backend/artifacts/contracts/TokenizedBallot.sol/TokenizedBallot.json";

const contractConfig = {
  abi: config.abi,
};

function QueryComponent() {
  const [result, setResult] = useState(null);
  const { data, error } = useContractRead({
    address: "0x36568e371Ab51Fa70FF8A3Ac524cAe0B8bBD9BA7",
    abi: contractConfig.abi,
    functionName: "winnerName", // You need to specify the function name of your contract that you want to call
  });

  useEffect(() => {
    if (error) {
      console.error("Query error:", (error as Error).message);
    } else if (data) {
      setResult(data);
    }
  }, [data, error]);

  const handleQuery = () => {
    // The actual query is already done by the useContractRead hook, but you can handle side effects or additional actions here.
    console.log(result);
  };

  return (
    <div>
      <h2>Winner of ballot</h2>
      <button onClick={handleQuery}>Query</button>
      {result && <div>Result: {result}</div>}
    </div>
  );
}

export default QueryComponent;
